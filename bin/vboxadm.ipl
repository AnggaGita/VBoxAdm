#!/usr/bin/perl
use strict;
use warnings;

use lib '@LIBDIR@';

# TODO allow changing the pw_lock flag on mailboxes

use English qw(-no_match_vars);

use CPAN;
use DBI;
use Data::Dumper;
use Getopt::Long;
use File::Temp;
use Config::Std;
use Net::Domain;
use Net::SMTP;
use Net::POP3;
use Net::IMAP::Client;
use Sys::Syslog;
use Text::Levenshtein qw(distance);

use VBoxAdm::DB '@VERSION@';
use VBoxAdm::Utils '@VERSION@';
use VBoxAdm::Migration '@VERSION@';
use VBoxAdm::SaltedHash '@VERSION@';
use VBoxAdm::Password '@VERSION@';
use VBoxAdm::Model::Alias '@VERSION@';
use VBoxAdm::Model::AWL '@VERSION@';
use VBoxAdm::Model::Domain '@VERSION@';
use VBoxAdm::Model::DomainAlias '@VERSION@';
use VBoxAdm::Model::Mailbox '@VERSION@';
use VBoxAdm::Model::User '@VERSION@';
use VBoxAdm::Model::VacationBlacklist '@VERSION@';
use VBoxAdm::Model::MessageQueue '@VERSION@';
use VBoxAdm::L10N '@VERSION@';

binmode( STDIN, ':utf8' );

openlog( 'vboxadm-cli', 'ndelay,nofatal', 'mail' );

my ( $conffile_used, %config, @modes, $opts );
$opts = {};

# Valid config file locations to try
my @conffile_locations = qw(
  vboxadm.conf
  conf/vboxadm.conf
  /etc/vboxadm/vboxadm.conf
  @CFGDIR@/vboxadm/vboxadm.conf
);

GetOptions(
    'verbose|v+'    => \$opts->{Verbose},
    'dry|d!'        => \$opts->{Dry},
    'quiet|q!'      => \$opts->{Quiet},
    'force|f!'      => \$opts->{Force},
    'name|n=s'      => \$opts->{Name},
    'source|s=s'    => \$opts->{Source},
    'source-db|d=s' => \$opts->{SourceDb},
    'truncate!'     => \$opts->{Truncate},
    'bootstrap!'    => \$opts->{Bootstrap},
    '<>'            => sub { my $m = shift; push( @modes, lc($m) ); },

    # shift removes name of the option (config) and leaves the value for unshift
    # unshift prepends to the list of valid config files so it is tried first
    'config=s' => sub { shift; unshift( @conffile_locations, @_ ); },
    'active|a=i'      => \$opts->{IsActive},
    'goto|g=s'        => \$opts->{Goto},
    'password|p=s'    => sub { shift; my $p = shift; $opts->{Password} = $p; $opts->{PasswordAgain} = $p; },
    'maxmsgsize|m=i'  => \$opts->{MaxMsgSize},
    'siteadmin=s'     => \$opts->{IsSiteadmin},
    'domainadmin=s'   => \$opts->{IsDomainadmin},
    'sakillscore|k=i' => \$opts->{SAKillScore},
    'saactive=i'      => \$opts->{SAActive},
    'vacation=i'      => \$opts->{IsOnVacation},
    'vacsubj=s'       => \$opts->{VacationSubject},
    'vacmsg=s'        => \$opts->{VacationMessage},
    'vacstart=s'      => \$opts->{VacationStart},
    'vacend=s'        => \$opts->{VacationEnd},
    'forcepass!'      => \$opts->{ForcePassword},
) or die("Unknown Command");

# Try all config file locations
foreach my $loc (@conffile_locations) {
    if ( -r $loc ) {
        $conffile_used = $loc;
        read_config $loc => %config;
        last;
    }
}

$config{'default'}{'dbhost'}   ||= 'localhost';
$config{'default'}{'dbuser'}   ||= 'vboxadm';
$config{'default'}{'dbpass'}   ||= '';
$config{'default'}{'dbport'}   ||= 3306;
$config{'default'}{'dbdb'}     ||= 'vboxadm';
$config{'default'}{'pwscheme'} ||= 'sha256';

print "# VBoxAdm CLI\n" unless $config{'quiet'};

#
# Database connection
#
my $dsn =
"DBI:mysql:host=$config{'default'}{'dbhost'};database=$config{'default'}{'dbdb'};port=$config{'default'}{'dbport'};user=$config{'default'}{'dbuser'};password=$config{'default'}{'dbpass'}";
my $dbh = &VBoxAdm::DB::connect( $dsn, { RaiseError => 0, PrintError => 0, } );

if ( !$dbh ) {
    print "Could not connect to DB!\n";
    exit 1;
}
else {
    print "Connected to DB\n" if $config{'verbose'};
}

#
# Localization
#
my $Messages = VBoxAdm::Model::MessageQueue->new(
    {
        'lh'    => VBoxAdm::L10N->get_handle(),
        'lh_en' => VBoxAdm::L10N->get_handle('en'),
    }
);

#
# Authentication
#
# if user != root -> need to login as domainadmin
my $User = &check_login( $dbh, \%config, $Messages, $opts );
if ( !$User ) {
    print "Not authorized. Aborting.\n";
    exit 1;
}
else {
    print "Login validated\n" if $config{'verbose'};
}

$opts->{User} = $User;

my $arg_ref = {
    'dbh'          => $dbh,
    'User'         => $User,
    'MessageQueue' => $Messages,
    'Logger'       => \&syslog,
    'Config'       => \%config,
};

exit 0;

__END__


