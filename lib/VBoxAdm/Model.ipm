package VBoxAdm::Model;

use strict;
use warnings;

use Carp;

our $VERSION = '@VERSION@';

use Class::Std;
{

    # Attributes
    my %dbh_of : ATTR;
    my %lh_of : ATTR;
    my %lh_en_of : ATTR;
    my %logger_of : ATTR;
    my %config_of : ATTR;
    my %user_of : ATTR;
    my %msgq_of : ATTR;

    sub BUILD {
        my ( $self, $ident, $arg_ref ) = @_;

        $dbh_of{$ident} = undef;

        if ( $arg_ref->{'dbh'} && $arg_ref->{'dbh'}->ping() ) {
            $dbh_of{$ident} = $arg_ref->{'dbh'};
        }
        else {
            return;
        }

        if ( $arg_ref->{'Model'} && $arg_ref->{'Model'}->isa('VBoxAdm::Model') ) {

            # 'Inherit' from another VBoxAdm::Model class
            my $ModelClass = $arg_ref->{'Model'};
            $logger_of{$ident} = $ModelClass->logger();
            $config_of{$ident} = $ModelClass->config();
            $user_of{$ident}   = $ModelClass->user();
            $msgq_of{$ident}   = $ModelClass->msg();
        }
        else {

            # Setup Logger
            $logger_of{$ident} = $arg_ref->{'Logger'} if $arg_ref->{'Logger'};

            # Set config
            $config_of{$ident} = $arg_ref->{'Config'} if $arg_ref->{'Config'};

            # Set User object
            $user_of{$ident} = $arg_ref->{'User'} if $arg_ref->{'User'};

            # Set MessageQueue
            $msgq_of{$ident} = $arg_ref->{'MessageQueue'} if $arg_ref->{'MessageQueue'};
        }
    }

    sub dbh : RESTRICTED {
        my ($self) = @_;
        my $ident = ident $self;
        return $dbh_of{$ident};
    }

    sub config : RESTRICTED {
        my ($self) = @_;
        my $ident = ident $self;
        return $config_of{$ident} || {};
    }

    sub log : RESTRICTED {
        my ( $self, $msg ) = @_;
        my $ident = ident $self;
        if ( $logger_of{$ident} ) {
            $logger_of{$ident}->log( 2, $msg );
            return 1;
        }
        return;
    }

    sub logger {
        my ($self) = @_;
        my $ident = ident $self;
        return $logger_of{$ident};
    }

    sub msg : RESTRICTED {
        my ($self) = @_;
        my $ident = ident $self;
        return $msgq_of{$ident};
    }

    sub user : RESTRICTED {
        my ($self) = @_;
        my $ident = ident $self;
        return $user_of{$ident};
    }

    sub DEMOLISH {
        my ($self) = @_;

        # NOP
    }
}
1;
